{"version":3,"sources":["styles/UserFormStyles.js","components/UserFormFields.js","components/UserForm.js","containers/UserContainer.js","helpers/sizes.js","styles/AppStyles.js","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","paper","display","flexDirection","alignItems","buttons","button","margin","field","Label","children","InputLabel","shrink","TextAreaComponent","label","rest","multiline","rows","UserFormFields","classes","useStyles","className","fields","component","TextField","variant","required","fullWidth","name","type","Select","defaultValue","MenuItem","value","UserForm","useFormikContext","submitForm","isSubmitting","Paper","LinearProgress","Button","color","disabled","onClick","UserContainer","initialValues","validationSchema","Yup","software_type","cost","budget","number_of_user","company_size","software_description","software_requirements","preprocessRequestData","values","total","number_of_users","data","replace","onSubmit","setSubmitting","console","log","axios","post","then","response","catch","error","errors","touched","size","xs","md","App","width","sizes","header","textAlign","fontSize","fontWeight","link","justifyContent","backfaceVisibility","position","textDecoration","transition","Container","maxWidth","CssBaseline","utils","DateFnsUtils","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f1dea0d.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  buttons: {\n    display: 'flex',\n    flexDirection: 'row-reverse',\n  },\n  button: {\n    margin: '5px',\n  },\n  field: {\n    margin: '5px',\n  },\n});\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Field } from 'formik';\nimport { TextField, Select } from 'formik-material-ui';\nimport { MenuItem, InputLabel } from '@material-ui/core';\n\nimport useStyles from '../styles/UserFormStyles';\n\nconst Label = ({ children }) => <InputLabel shrink>{children}</InputLabel>;\nconst TextAreaComponent = ({ label, ...rest }) => (\n  <>\n    <Label>{label}</Label>\n    <TextField multiline rows={4} {...rest} />\n  </>\n);\nconst UserFormFields = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.fields}>\n      <Field\n        className={classes.field}\n        component={TextField}\n        variant=\"outlined\"\n        required\n        fullWidth\n        name=\"software_type\"\n        type=\"text\"\n        label=\"Type of Software\"\n      />\n      <Field\n        className={classes.field}\n        component={TextField}\n        variant=\"outlined\"\n        required\n        fullWidth\n        name=\"cost\"\n        type=\"number\"\n        label=\"Software Cost Per Year for one User\"\n      />\n      <Field\n        className={classes.field}\n        component={TextField}\n        variant=\"outlined\"\n        required\n        fullWidth\n        name=\"budget\"\n        type=\"number\"\n        label=\"Company Budget per Year\"\n      />\n\n      <Field\n        className={classes.field}\n        component={TextField}\n        variant=\"outlined\"\n        required\n        fullWidth\n        name=\"number_of_users\"\n        type=\"number\"\n        label=\"Number of Users in the Company\"\n      />\n\n      <Label>Company Size</Label>\n      <Field\n        className={classes.field}\n        component={Select}\n        variant=\"outlined\"\n        required\n        fullWidth\n        name=\"company_size\"\n        label=\"Company Size\"\n        defaultValue=\"small\"\n      >\n        <MenuItem value=\"small\">Small</MenuItem>\n        <MenuItem value=\"medium\">Medium</MenuItem>\n        <MenuItem value=\"large\">Large</MenuItem>\n      </Field>\n\n      <Field\n        className={classes.field}\n        component={TextAreaComponent}\n        variant=\"outlined\"\n        required\n        fullWidth\n        name=\"software_description\"\n        label=\"Software Description\"\n      />\n\n      <Field\n        className={classes.field}\n        component={TextAreaComponent}\n        variant=\"outlined\"\n        required\n        fullWidth\n        name=\"software_requirements\"\n        label=\"Software Requirements\"\n      />\n    </div>\n  );\n};\nexport default UserFormFields;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport { Form, useFormikContext } from 'formik';\nimport { Button, LinearProgress, Paper } from '@material-ui/core';\nimport UserFormFields from './UserFormFields';\nimport useStyles from '../styles/UserFormStyles';\n\nconst UserForm = () => {\n  const classes = useStyles();\n\n  const { submitForm, isSubmitting } = useFormikContext();\n\n  return (\n    <Paper className={classes.paper}>\n      <Form>\n        <UserFormFields />\n\n        {isSubmitting && <LinearProgress />}\n        <div className={classes.buttons}>\n          <Button\n            className={classes.button}\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={isSubmitting}\n            onClick={submitForm}\n          >\n            Submit\n          </Button>\n        </div>\n      </Form>\n    </Paper>\n  );\n};\nexport default UserForm;\n","/* eslint-disable react/prop-types */\nimport axios from 'axios';\nimport React, { Fragment } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport UserForm from '../components/UserForm';\n\nconst UserContainer = ({ initialValues }) => {\n  const validationSchema = Yup.object({\n    software_type: Yup.string().required('Required'),\n    cost: '',\n    budget: '',\n    number_of_user: '',\n    company_size: '',\n    software_description: Yup.string().required('Required'),\n    software_requirements: Yup.string().required('Required'),\n  });\n\n  const preprocessRequestData = (values) => {\n    const total = values.budget - values.cost * values.number_of_users;\n\n    const data = `We are ${values.company_size} we need: ${\n      values.software_requirements\n    } with this software our total is ${\n      total > 0 ? `positive ${total}` : `negative ${total}`\n    }, we are interested in: ${values.software_description}`;\n\n    const processedData = data.replace(/\\n/g, ' ');\n    return { data: processedData };\n  };\n\n  const handleSubmit = (values, { setSubmitting }) => {\n    // Make a POST request with the form values\n\n    console.log('data: ', preprocessRequestData(values));\n\n    axios\n      .post('http://217.160.44.217:80/pred', preprocessRequestData(values))\n      .then((response) => {\n        setSubmitting(false);\n        console.log(response.data); // Handle the response\n      })\n      .catch((error) => {\n        setSubmitting(false);\n        console.error(error); // Handle any errors\n      });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ values, errors, touched, ...rest }) => (\n        <Fragment>\n          <UserForm {...rest} />\n        </Fragment>\n      )}\n    </Formik>\n  );\n};\n\nexport default UserContainer;\n","export default {\n  down(size) {\n    const sizes = {\n      xs: '575.98px',\n      md: '991.98px',\n    };\n\n    return `@media (max-width: ${sizes[size]})`;\n  },\n};\n","import { makeStyles } from '@material-ui/core/styles';\nimport sizes from '../helpers/sizes';\n\nexport default makeStyles({\n  App: {\n    width: '60%',\n    margin: '0 auto',\n    [sizes.down('md')]: {\n      width: '70%',\n    },\n    [sizes.down('xs')]: {\n      width: '90%',\n    },\n  },\n  header: {\n    textAlign: 'center',\n    '& h1': {\n      color: '#2c3e50',\n      margin: '5vh 0 0 0',\n      fontSize: '5rem',\n      fontWeight: '300',\n      '& span': {\n        fontWeight: '700',\n      },\n      [sizes.down('xs')]: {\n        fontSize: '4.5rem',\n      },\n    },\n    '& h2': {\n      color: '#9aa1a5',\n      fontSize: '1rem',\n      fontWeight: '300',\n      [sizes.down('xs')]: {\n        fontSize: '0.6rem',\n      },\n    },\n  },\n  link: {\n    display: 'flex',\n    justifyContent: 'center',\n    backfaceVisibility: 'hidden',\n    color: '#81b3d2',\n    fontSize: '0.7rem',\n    position: 'relative',\n    textDecoration: 'none',\n    transition: '0.5s color ease',\n  },\n});\n","import React from 'react';\nimport { Container, CssBaseline } from '@material-ui/core';\n\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport UserContainer from './containers/UserContainer';\n\nimport useStyles from './styles/AppStyles';\n\nconst App = () => {\n  const classes = useStyles();\n\n  const newOne = {\n    software_type: '',\n    cost: '',\n    budget: '',\n    number_of_users: '',\n    company_size: '',\n    software_description: '',\n    software_requirements: '',\n  };\n\n  return (\n    <Container maxWidth=\"md\">\n      <CssBaseline />\n      <header className={classes.header}>\n        <h1>\n          <span>Software Purchase Prediction</span>\n        </h1>\n      </header>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <UserContainer initialValues={newOne} />\n      </MuiPickersUtilsProvider>\n    </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable import/no-named-as-default */\n/* eslint-disable import/no-named-as-default-member */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}